{"version":3,"sources":["components/AgregarCategoria.js","components/ItemGif.js","helpers/getGifs.js","components/ListaGif.js","hooks/useFetch.js","GifExpertApp.js","index.js"],"names":["AgregarCategoria","setCategorias","useState","categoria","setCategoria","onSubmit","e","preventDefault","cat","className","htmlFor","type","value","id","onChange","target","ItemGif","title","url","src","alt","getGifs","a","endPoint","encodeURI","fetch","response","json","data","listaGif","map","d","images","original","ListaGif","loading","setData","useEffect","then","gifs","useFetch","gif","key","GifExpertApp","categorias","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAoCeA,EAjCU,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAEnCC,EAFmC,KAExBC,EAFwB,KAc1C,OACI,0BAAMC,SAPW,SAAAC,GACjBA,EAAEC,iBACFN,GAAe,SAACO,GAAD,OAAUL,GAAV,mBAAwBK,OACvCJ,EAAa,MAKT,yBAAKK,UAAU,cACX,2BAAOC,QAAQ,aAAf,aACA,2BACIC,KAAK,OACLC,MAAOT,EACPU,GAAG,YACHC,SAlBK,SAAAR,GACjBF,EAAaE,EAAES,OAAOH,aCSfI,EAdC,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACtB,OACM,yBAAKT,UAAU,0CACb,yBAAKU,IAAKD,EAAKE,IAAKH,IACpB,uBAAGR,UAAU,UAAUQ,K,uBCPtBI,EAAO,uCAAG,WAAQlB,GAAR,uBAAAmB,EAAA,4DAGA,mCACTC,EAJS,iDAI6CC,UAAUrB,GAJvD,4BAGA,oCAHA,SAMQsB,MAAMF,GANd,cAMTG,EANS,gBAOQA,EAASC,OAPjB,uBAOPC,EAPO,EAOPA,KAEFC,EAAWD,EAAKE,KAAK,SAACC,GAAD,YAAQ,CAC/BlB,GAAIkB,EAAElB,GACNI,MAAOc,EAAEd,MACTC,IAAG,UAAEa,EAAEC,cAAJ,aAAE,EAAUC,SAASf,QAZb,kBAgBRW,GAhBQ,4CAAH,sDC6BLK,EAxBE,SAAC,GAAiB,IAAhB/B,EAAe,EAAfA,UAAe,ECFV,SAAEA,GAAgB,IAAD,EAEbD,mBAAS,CAC7B0B,KAAM,GACNO,SAAS,IAJwB,mBAE9BP,EAF8B,KAExBQ,EAFwB,KAgBrC,OATAC,qBAAW,WACPhB,EAAQlB,GAAWmC,MAAM,SAAAC,GACjBH,EAAQ,CACJR,KAAMW,EACNJ,SAAS,SAGtB,CAAChC,IAEGyB,EDZmBY,CAASrC,GAA3ByB,EAFsB,EAEtBA,KAAMO,EAFgB,EAEhBA,QAEd,OACI,oCACI,4BAAKhC,GACHgC,GAAW,uBAAG1B,UAAU,oCAAb,eACb,yBAAKA,UAAU,SAEPmB,EAAKE,KAAK,SAAAW,GAAG,OACT,kBAAC,EAAD,eAASC,IAAKD,EAAI5B,IAAQ4B,UEQnCE,EApBM,WAAO,IAAD,EAEazC,mBAAS,CAAC,SAFvB,mBAEhB0C,EAFgB,KAEJ3C,EAFI,KAIvB,OACI,oCACG,8CACA,kBAAC,EAAD,CAAkBA,cAAeA,IAChC,6BACA,yBAAKQ,UAAU,cAEPmC,EAAWd,KAAK,SAAA3B,GAAS,OACnB,kBAAC,EAAD,CAAUuC,IAAKvC,EAAWA,UAAWA,U,MCX/D0C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.9cd76934.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst AgregarCategoria = ({setCategorias}) => {\n    \n    const [categoria, setCategoria] = useState('');\n\n    const handleChange = e => {\n        setCategoria(e.target.value);    \n    }\n    \n    const handleSubmit = e => {\n        e.preventDefault();\n        setCategorias( (cat) => [categoria, ...cat] );\n        setCategoria('');\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className='form-group'>\n                <label htmlFor='categoria'>Categoria</label>\n                <input \n                    type='text'\n                    value={categoria}\n                    id='categoria'\n                    onChange={handleChange}\n                />\n            </div>\n        </form>\n    )\n}\n\nAgregarCategoria.propTypes = {\n    setCategorias: PropTypes.func.isRequired\n}\n\nexport default AgregarCategoria\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ItemGif = ( {title, url} ) => {\n    return (\n          <div className='animate__animated animate__fadeInUpBig'>\n            <img src={url} alt={title} />\n            <p className='titulo'>{title}</p>\n          </div>          \n    )\n}\n\nItemGif.propTypes = {\n    url: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired\n}\n\nexport default ItemGif\n","export const getGifs = async ( categoria ) => {\n\n    //const obtenerImagenesGif = async () => {\n        const apiKey = 'msRtlKG1L0ckRTwzSlkaNYZR1fMl3aDP';\n        const endPoint = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(categoria) }&limit=5&api_key=${apiKey}`;\n\n        const response = await fetch(endPoint);\n        const { data } = await response.json();\n\n        const listaGif = data.map( (d) => ({\n            id: d.id,\n            title: d.title,\n            url: d.images?.original.url\n            })  \n        );\n\n        return listaGif;\n\n        //setGifs(listaGif);\n    //}\n\n}\n\n//export default getGifs;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ItemGif from './ItemGif';\nimport {useFetch} from '../hooks/useFetch'\n\nconst ListaGif = ({categoria}) => {\n\n    const { data, loading } = useFetch(categoria);\n\n    return (\n        <>\n            <h2>{categoria}</h2>\n            { loading && <p className='animate__animated animate__flash'>Buscando...</p> }\n            <div className='lista'>\n                {   \n                    data.map( gif => ( \n                        <ItemGif key={gif.id} {...gif} /> \n                        )\n                    )\n                }   \n            </div>\n        </>\n    )\n}\n\nListaGif.propTypes = {\n    categoria: PropTypes.string.isRequired\n};\n\nexport default ListaGif;\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetch = ( categoria ) => {\n\n    const [data, setData] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n        getGifs(categoria).then( gifs => {\n                setData({\n                    data: gifs,\n                    loading: false\n                });    \n        });\n    }, [categoria]);\n\n    return data;\n}\n\n//export default useFetch;","import React, { useState } from 'react'\nimport AgregarCategoria from './components/AgregarCategoria';\nimport ListaGif from './components/ListaGif';\n\nconst GifExpertApp = () => {\n\n    const [categorias, setCategorias] = useState(['Goku']);\n\n    return (\n        <>\n           <h1>Gif Expert App</h1>\n           <AgregarCategoria setCategorias={setCategorias} />\n            <hr />\n            <div className='contenedor'>\n                { \n                    categorias.map( categoria => \n                        ( <ListaGif key={categoria} categoria={categoria} />)\n                    ) \n                }\n            </div>\n        </>\n    )\n};\n\nexport default GifExpertApp;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}